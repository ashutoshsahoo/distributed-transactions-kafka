spring:
  application:
    name: order-service
  main:
    banner-mode: off
  kafka:
    bootstrap-servers: http://localhost:9092
    properties:
      schema.registry.url: http://localhost:8081
      specific.avro.reader: true
    producer:
      key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer

    streams:
      properties:
        default.key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
      state-dir: ./build/temp/kafka-streams/2

logging:
  level:
    root: warn
    com.ashu.practice: DEBUG
#    io.opentelemetry.exporters: TRACE
#    org.springframework.web.servlet.DispatcherServlet: DEBUG

management:
  metrics:
    enable:
      all: true
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
        greeting:
          call: true
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: "*"
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans